[workspace]
members = ["crates/*", "rust-skills/*", "pharia-engine"]
resolver = "3"

[workspace.package]
edition = "2024"

[workspace.lints.rust]
future-incompatible = "warn"
keyword-idents = "warn"
let-underscore = "warn"
nonstandard-style = "warn"
refining-impl-trait = "warn"
rust-2018-idioms = "warn"
rust-2024-compatibility = { level = "warn", priority = -1 }
unused = { level = "warn", priority = -1 }
# Lint is noisy and we are unlikely to have drop order dependencies
if-let-rescope = "allow"
# Lint is noisy and we are unlikely to have drop order dependencies
tail-expr-drop-order = "allow"

[workspace.lints.clippy]
dbg-macro = "warn"
# While the pass by value may be needless know, one might decide to pass ownership with later
# optimizations in mind. Long story short: Function signatures are interfacs, which may be harder
# to change later, and we might anticpate actually using the ownership in the implementation later,
# even if we do not do so know. IMHO this lint was created without keeping in mind that code needs
# to change. This leads to false positives.
needless-pass-by-value = "allow"
# This is a) not a library and
# b) this leads to false positives if you use unwrap for unreachable errors
missing_panics_doc = "allow"
pedantic = { level = "warn", priority = -1 }
module-name-repetitions = "allow"

[profile.release]
# panic should only be caused by bugs
panic = 'abort'
# link time optimizations
lto = true

[profile.dev.package.cranelift-codegen]
opt-level = 3
