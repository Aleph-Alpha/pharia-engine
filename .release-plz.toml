[workspace]
release = false
release_always = false
# Disable git releases for all packages by default
git_release_enable = false
# Disable git tags for all packages by default
git_tag_enable = false

[[package]]
name = "pharia-kernel"
release = true
# We only do git tags and releases for the main package
# Customize the git tag name to remove the `pharia-kernel` prefix.
git_tag_name = "v{{ version }}"
# Enable git tags for this package
git_tag_enable = true
# Enable git releases for this package
git_release_enable = true

[[package]]
name = "engine-room"
# We need to publish this for the main release to work
release = true

[changelog]
body = """

{% macro print_commit(commit) -%}
    - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
      {% if commit.breaking %}[**breaking**] {% endif %}\
      {{ commit.message | upper_first }} - \
      ([{{ commit.id | truncate(length=7, end="") }}]({{ remote.link }}/commit/{{ commit.id }}))\
{% endmacro -%}

{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]({{ release_link }})
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}]
    {% endif %}\
{% endif %}\

{% for group, commits in commits
| filter(attribute="merge_commit", value=false)
| unique(attribute="message")
| group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor -%}
    {% raw %}\n{% endraw %}\
    {%- for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor %}\n
"""

commit_parsers = [
    { message = "^feat", group = "<!-- 0 -->Features" },
    { message = "^fix", group = "<!-- 1 -->Fixes" },
    { message = "^doc", group = "<!-- 2 -->Documentation" },
    { message = "^perf", group = "<!-- 3 -->Performance" },
    { message = "^build", group = "<!-- 4 -->Builds" },
]

link_parsers = [{ pattern = "#(\\d+)", href = "{{ remote.link }}/issues/$1" }]
