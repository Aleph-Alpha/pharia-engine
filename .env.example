# Environment variables to run the Kernel. All of these can also be configured in the `config.toml` file in yaml syntax.

# Setting these two variables (and not setting the `INFERENCE_URL`) configures the Kernel to run with any OpenAI compatible
# inference backend and to always use the same token to authenticate.
OPENAI_INFERENCE__URL=https://api.openai.com/v1
OPENAI_INFERENCE__TOKEN=

# Used to active/deactivate unstable features, or features which are only supposed to be in the next
# release. Set this to `BETA` to have all features enabled.
PHARIA_AI_FEATURE_SET=BETA

# Where to listen at
KERNEL_ADDRESS=127.0.0.1:8081

# Where to expose metrics. Any GET request to this address or sub-paths will return prometheus compatible metrics.
METRICS_ADDRESS=127.0.0.1:9000

# Where to export OpenTelemetry data to
OTEL_ENDPOINT=
# Whether to capture `GenAI` content (prompts/completions) in traces.
OTEL_GEN_AI_CONTENT_CAPTURE=False
# Here you can add additional HTTP headers that might be required
# e.g. for Pharia Studio
# OTEL_EXPORTER_OTLP_TRACES_HEADERS="Bearer ****"
OTEL_EXPORTER_OTLP_TRACES_HEADERS=""

# The Kernel allows Skills to be grouped in different namespaces that need to be configured.
# By specifying the `DIRECTORY` variable for the `dev` namespaces, the Kernel will serve all Skills that are placed in the
# `skills` in that namespace.
NAMESPACES__DEV__DIRECTORY=skills

# Namespaces can also be configured to pull Skills from an OCI registry.
# In this case, multiple variables need to be configured.
# For the namespace `team-name`, this would look like:

# NAMESPACES__TEAM_NAME__REGISTRY=ghcr.io
# NAMESPACES__TEAM_NAME__BASE_REPOSITORY=your-company/your-repository

# Username and token to authenticate against the registry when pulling Skills.
# In case you are using a token as password, you can simply set this value to `dummy`.

# NAMESPACES__TEAM_NAME__REGISTRY_USER=
# NAMESPACES__TEAM_NAME__REGISTRY_PASSWORD=

# Skills are not deployed by being available in the registry. For each namespace, the Kernel watches a file that lists available Skills.
# For this file, both the URL and the token to access it need to be specified

# NAMESPACES__TEAM_NAME__CONFIG_URL=
# NAMESPACES__TEAM_NAME__CONFIG_ACCESS_TOKEN=