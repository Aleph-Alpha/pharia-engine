# -- Active namespaces for PhariaKernel. e.g.:
# playground:
#   configUrl: "https://gitlab.aleph-alpha.de/api/v4/projects/997/repository/files/namespace.toml/raw?ref=main"
#   configAccessToken: "GITLAB_CONFIG_ACCESS_TOKEN"
#   registry: "registry.gitlab.aleph-alpha.de"
#   baseRepository: "engineering/pharia-kernel-playground/skills"
#   registryUser: "REGISTRY_USER"
#   registryPassword: "REGISTRY_PASSWORD"
# Each of the value can alternatively be provided as environment variables, which have higher precedence:
# NAMESPACES__PLAYGROUND__CONFIG_URL
# NAMESPACES__PLAYGROUND__CONFIG_ACCESS_TOKEN
# NAMESPACES__PLAYGROUND__REGISTRY
# NAMESPACES__PLAYGROUND__BASE_REPOSITORY
# NAMESPACES__PLAYGROUND__REGISTRY_USER
# NAMESPACES__PLAYGROUND__REGISTRY_PASSWORD
namespaces: {}
logLevel: info
# Address of an OpenTelemetry collector listening for gRPC requests.
openTelemetryEndpoint: ""
# Sampling ratio between 0.0 and 1.0, where 0.0 means no sampling and 1.0 means all traces
openTelemetrySamplingRatio: ""
authorizationAddress: ""
inferenceAddress: ""
documentIndexAddress: ""
global:
  # Global config for all ingress resources
  ingress:
    # -- Domain for external access / ingress to Pharia AI services via {service}.{domain}
    #    e.g. {service}.pharia-ai.example.com
    ingressDomain: local
fullnameOverride: pharia-kernel
ingress:
  annotations:
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
serviceMonitor:
  enabled: false
  endpoints:
    - interval: 30s
      path: /
      port: metrics
serviceAccount:
  automountServiceAccountToken: true
image:
  registry: alephalpha.jfrog.io
  repository: container-images/pharia-kernel
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 2000
  runAsGroup: 2000
containerSecurityContext:
  capabilities:
    drop:
      - ALL
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
envVars:
  values:
    LOG_LEVEL: "{{ .Values.logLevel }}"
    OTEL_ENDPOINT: "{{ .Values.openTelemetryEndpoint }}"
    OTEL_SAMPLING_RATIO: "{{ .Values.openTelemetrySamplingRatio }}"
    AUTHORIZATION_URL: "{{ .Values.authorizationAddress }}"
    INFERENCE_URL: "{{ .Values.inferenceAddress }}"
    DOCUMENT_INDEX_URL: "{{ .Values.documentIndexAddress }}"
    WASMTIME_CACHE_DIR: "/app/.cache"
  configmap:
    AUTHORIZATION_URL:
      name: "{{ .Values.global.phariaAIConfigMap }}"
      key: "PHARIA_IAM_URL"
    INFERENCE_URL:
      name: "{{ .Values.global.phariaAIConfigMap }}"
      key: "API_SCHEDULER_URL"
    DOCUMENT_INDEX_URL:
      name: "{{ .Values.global.phariaAIConfigMap }}"
      key: "DOCUMENT_INDEX_URL"
  resourceFields:
    MEMORY_REQUEST:
      resource: requests.memory
    MEMORY_LIMIT:
      resource: limits.memory
    WASMTIME_CACHE_SIZE_REQUEST:
      resource: requests.ephemeral-storage
    WASMTIME_CACHE_SIZE_LIMIT:
      resource: limits.ephemeral-storage
extraVolumes:
  - name: config-volume
    configMap:
      name: pharia-kernel
  - name: ephemeral
    emptyDir:
      sizeLimit: 4Gi
extraVolumeMounts:
  - name: config-volume
    mountPath: /app/config.toml
    subPath: config.toml
    readOnly: true
  - name: ephemeral
    mountPath: /app/.cache
# The recommended resources are set as the default. As the requirements are highly usage-dependent,
# adjust them as necessary.
resources:
  limits:
    cpu: "4"
    memory: 8Gi
    ephemeral-storage: 8Gi
  requests:
    cpu: "2"
    memory: 4Gi
    ephemeral-storage: 4Gi
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 15
  failureThreshold: 2
readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 2
automountServiceAccountToken: true
service:
  type: ClusterIP
  ports:
    - name: http
      servicePort: 80
      containerPort: 8081
      protocol: TCP
    - name: metrics
      servicePort: 9000
      containerPort: 9000
      protocol: TCP
