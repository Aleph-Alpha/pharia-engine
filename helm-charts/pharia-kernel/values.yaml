global:
  phariaAIConfigMap: ""
  imagePullSecretName: ""
  # Global config for all ingress resources
  ingress:
    # -- The ingressClassName globally defined for all ingress resources.
    #    See also: https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource
    ingressClassName: nginx
    # -- Domain for external access / ingress to Pharia AI services via {service}.{domain}
    #    e.g. {service}.pharia-ai.example.com
    ingressDomain: local
    # -- Additional annotations globally defined for all ingress-resources. This can be used to add ingress controller specific annotations.
    additionalAnnotations: {}
image:
  repository: alephalpha.jfrog.io/container-images/pharia-kernel
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
nameOverride: pharia-kernel
fullnameOverride: pharia-kernel
imagePullSecrets: []
podAnnotations: {}
podLabels:
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 2000
  runAsGroup: 2000
securityContext:
  capabilities:
    drop:
      - ALL
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
service:
  type: ClusterIP
  port: 80
  portName: http
  targetPort: 8081
  targetPortName: http
  protocol: TCP
  metricsPort: 9000
  metricsPortName: metrics
  metricsTargetPort: 9000
  metricsTargetPortName: metrics
  metricsProtocol: TCP
serviceMonitor:
  enabled: false
# -- If the default namespaces are enabled, the provided namespaces with existing keys are ignored
defaultNamespacesEnabled: false
# -- Active namespaces for Pharia Kernel. e.g.:
# playground:
#   config_url: "https://gitlab.aleph-alpha.de/api/v4/projects/997/repository/files/namespace.toml/raw?ref=main"
#   config_access_token_env_var: "GITLAB_CONFIG_ACCESS_TOKEN"
#   registry: "registry.gitlab.aleph-alpha.de"
#   repository: "engineering/pharia-kernel-playground/skills"
namespaces: {}
logLevel: info
authorizationAddress: ""
inferenceAddress: ""
documentIndexAddress: ""
openTelemetryEndpoint: ""

ingress:
  enabled: true
  hostname: pharia-kernel
  annotations: {}
  tls:
    enabled: false
    secretName: ""
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, add the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: "1"
#   memory: 4Gi
# requests:
#   cpu: 500m
#   memory: 2Gi
resources: {}
volumes:
  - name: config-volume
    configMap:
      name: pharia-kernel-operator-config
volumeMounts:
  - name: config-volume
    mountPath: /app/operator-config.toml
    subPath: operator-config.toml
    readOnly: true
nodeSelector: {}
tolerations: []
affinity: {}
