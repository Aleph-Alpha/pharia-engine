name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  ARTIFACTORY_URL: https://alephalpha.jfrog.io

jobs:
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Get JFrog Artifactory login credentials
        uses: ./.github/actions/jfrog

      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
          registry: jfrog
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRIES_JFROG_TOKEN: "Bearer ${{ env.JFROG_ACCESS_TOKEN }}"

  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    if: "!startsWith(github.event.head_commit.message, 'chore(pharia-kernel): release v')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Get JFrog Artifactory login credentials
        uses: ./.github/actions/jfrog

      - name: Run release-plz
        id: release-plz
        uses: release-plz/action@v0.5
        with:
          command: release-pr
          registry: jfrog
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRIES_JFROG_TOKEN: "Bearer ${{ env.JFROG_ACCESS_TOKEN }}"

      - if: ${{ steps.release-plz.outputs.prs_created }}
        name: Update Helm chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          pr_number=${{ fromJSON(steps.release-plz.outputs.pr).number }}
          if [[ -n "$pr_number" ]]; then
            gh pr checkout $pr_number
            PATH_TO_CHART="helm-charts/pharia-kernel/Chart.yaml"
            APP_VERSION=$(yq ".appVersion" < $PATH_TO_CHART)
            NEW_APP_VERSION=$(echo $(cargo pkgid) | cut -d "#" -f2)
            if [[ "$APP_VERSION" != "$NEW_APP_VERSION" ]]; then
              CHART_VERSION=$(yq ".version" < $PATH_TO_CHART)
              NEW_CHART_VERSION=$(echo "$CHART_VERSION" | awk -F '.' '{print $1"."$2"."($3+1)}')
              yq -i "(.version = \"$NEW_CHART_VERSION\") | (.appVersion = \"$NEW_APP_VERSION\")" $PATH_TO_CHART
              git commit -a --amend --no-edit
              git push -f
              echo "CHART_VERSION=$NEW_CHART_VERSION" >> $GITHUB_ENV
            fi
          fi

      - if: ${{ steps.release-plz.outputs.prs_created }}
        name: Install git-cliff
        uses: taiki-e/install-action@git-cliff

      - if: ${{ steps.release-plz.outputs.prs_created }}
        name: Generate Helm chart changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          pr_number=${{ fromJSON(steps.release-plz.outputs.pr).number }}
          if [[ -n "$pr_number" ]]; then
            gh pr checkout $pr_number

            git-cliff --unreleased --context --config helm-charts/pharia-kernel/changelogs/cliff.toml --output context.json

            COMMIT_MESSAGES=$(cat context.json | jq -r '.[] | .commits[] | .raw_message | split("\n")[0]' | paste -sd ';' -)

            RELEASE_DESCRIPTION=$(curl 'https://pharia-kernel.product.pharia.com/v1/skills/kernel/summarize_commits/run' \
              --silent \
              --request POST \
              --header 'Content-Type: application/json' \
              --header "Authorization: Bearer ${{ secrets.PHARIA_AI_TOKEN }}" \
              --data "\"$COMMIT_MESSAGES\"" | xargs)

            cat context.json \
              | jq --arg RELEASE_DESCRIPTION "$RELEASE_DESCRIPTION" \
                '.[0].extra = {"chart_version":"${{ env.CHART_VERSION }}","timestamp":now | strftime("%Y-%m-%d"),"description":$RELEASE_DESCRIPTION}' \
              | git-cliff --verbose --from-context - \
              --config helm-charts/pharia-kernel/changelogs/cliff.toml \
              --output helm-charts/pharia-kernel/changelogs/Changelog-pharia-kernel-${{ env.CHART_VERSION }}.md
            git add helm-charts/pharia-kernel/changelogs/Changelog-pharia-kernel-${{ env.CHART_VERSION }}.md
            git commit --amend --no-edit
            git push -f
          fi
